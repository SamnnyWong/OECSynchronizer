from tester_base import *
from synchronizer import *
from cmdutil import StyledPrint
import platform


class SynchronizerTest(BaseTestCase):

    def test_sync(self):
        syncr = Synchronizer(SrcPath.abs('config.yml'),
                             data_root=self.SHARED_PATH)
        self.assertEqual(self.SHARED_PATH, syncr.data_root)

        syncr.sync(StyledPrint.update_request)

    def test_get_system_file(self):
        syncr = Synchronizer(SrcPath.abs('config.yml'),
                             data_root=self.SHARED_PATH)

        path_1rxs1609 = os.path.join(syncr.data_root,
                                     syncr.DATAPATH_OEC,
                                     'systems', '1RXS1609.xml')

        path_2m_0746_20 = os.path.join(syncr.data_root,
                                       syncr.DATAPATH_OEC,
                                       'systems', '2M 0746+20.xml')

        self.assertPathEqual(
            path_1rxs1609,
            syncr.get_system_file('1RXS1609'),
            "Should recognize the default name"
        )

        self.assertPathEqual(
            path_2m_0746_20,
            syncr.get_system_file('2M 0746+20'),
            "Should recognize the default name"
        )

        self.assertPathEqual(
            path_2m_0746_20,
            syncr.get_system_file('2MASS J07464256+2000321'),
            "Should also recognize alternate names"
        )

    def test_submit(self):
        syncr = Synchronizer(SrcPath.abs('config.yml'),
                             data_root=self.SHARED_PATH)

        fake_request = UpdateRequest(
            PlanetarySysUpdate(
                '11 Com',
                planets=[
                    PlanetUpdate(
                        '11 Com b',
                        fields={
                            'mass': Quantity('42',
                                             unit='M_j',
                                             error=('42.42', '4242.4242')
                                             ),
                            'eccentricity': Quantity('0.42',
                                                     error=('0.419', '0.421'),
                                                     is_limit=True
                                                     ),
                        }
                    )
                ]
            ),
            title="[Test] - Update 11 Com",
            message="Generated by SynchronizerTest.test_submit\n" +
                    "Platform: " + platform.platform(),
            reference="SynchronizerTest"
        )

        # submit the request as duplicates
        pull_id = syncr.submit(fake_request, force=True)
        self.assertGreater(pull_id, 0, "invalid pull request id")

    def test_reject(self):
        syncr = Synchronizer(SrcPath.abs('config.yml'),
                             data_root=self.SHARED_PATH)

        fake_request = UpdateRequest(
            PlanetarySysUpdate(
                '11 Com',
                planets=[
                    PlanetUpdate(
                        '11 Com b',
                        fields={
                            'mass': Quantity('42',
                                             unit='M_j',
                                             error=('42.42', '4242.4242')
                                             ),
                            'eccentricity': Quantity('0.42',
                                                     error=('0.419', '0.421'),
                                                     is_limit=True
                                                     ),
                        }
                    )
                ]
            ),
            title="[Test] - Update 11 Com",
            message="Generated by SynchronizerTest.test_reject\n" +
                    "Platform: " + platform.platform(),
            reference="SynchronizerTest"
        )
        pull_id = syncr.reject(fake_request, force=True)
        self.assertGreater(pull_id, 0, "invalid pull request id")
